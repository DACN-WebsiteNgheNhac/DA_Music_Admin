<Window
    x:Class="DA_Music_Admin.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Interaction="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:behavior="clr-namespace:CustomControls.Behaviors;assembly=CustomControls"
    xmlns:customcontrols="clr-namespace:CustomControls.Controls;assembly=CustomControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:fa="http://schemas.fontawesome.io/icons/"
    xmlns:local="clr-namespace:DA_Music_Admin.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:DA_Music_Admin.ViewModels"
    Name="Window"
    Width="1300"
    Height="800"
    Background="{StaticResource BackgroundColor}"
    Closing="WindowClosing"
    FontFamily="Alata"
    Tag="Force Sclose"
    WindowState="Maximized">
    <Interaction:Interaction.Triggers>

        <Interaction:EventTrigger EventName="Loaded">
            <Interaction:InvokeCommandAction Command="{Binding MainView_Loaded}" CommandParameter="{Binding ElementName=Window}" />
        </Interaction:EventTrigger>

    </Interaction:Interaction.Triggers>

    <Window.Resources>

        <ResourceDictionary>

            <Storyboard x:Key="HighLight">
                <ColorAnimation
                    AutoReverse="True"
                    FillBehavior="Stop"
                    RepeatBehavior="3x"
                    Storyboard.TargetName="tblOpenProcess"
                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                    To="{StaticResource ColorIconColor}"
                    Duration="0:0:0.5" />
            </Storyboard>

            <Style
                x:Key="PathIcon"
                x:Name="PathIcon"
                TargetType="Path">
                <Setter Property="Fill" Value="#dadada" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="30,0,0,0" />
                <Setter Property="UseLayoutRounding" Value="True" />



            </Style>

            <Style x:Key="IconArrow" TargetType="Path">
                <Setter Property="Fill" Value="White" />
                <Setter Property="UseLayoutRounding" Value="True" />
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="Opacity" Value="0" />
                <Setter Property="Data" Value="M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M10,16.5L16,12L10,7.5V16.5Z" />
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}" Value="True" />
                            <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}" Value="False" />
                        </MultiDataTrigger.Conditions>

                        <MultiDataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard Timeline.DesiredFrameRate="{StaticResource FPS}">
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="Opacity"
                                        To="1"
                                        Duration="0:0:0.125" />


                                </Storyboard>
                            </BeginStoryboard>
                        </MultiDataTrigger.EnterActions>

                        <MultiDataTrigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard Timeline.DesiredFrameRate="{StaticResource FPS}">
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="Opacity"
                                        To="0"
                                        Duration="0:0:0" />


                                </Storyboard>
                            </BeginStoryboard>
                        </MultiDataTrigger.ExitActions>

                    </MultiDataTrigger>
                </Style.Triggers>

            </Style>

            <Duration x:Key="AnimationDuration">0:0:0.2</Duration>

            <LinearGradientBrush x:Key="gradientColor_4" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0" Color="#d489ff" />
                <GradientStop Offset="0.5" Color="#7985ff" />
                <GradientStop Offset="1" Color="#6ad8fd" />
            </LinearGradientBrush>
            <!--#region Button Open Menu-->

            <Style x:Key="baseIconMenu" TargetType="fa:ImageAwesome">
                <Setter Property="Foreground" Value="{StaticResource ForegroundColor}" />
                <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type CheckBox}}}" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource gradientColor_4}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style
                x:Key="iconOpenMenu"
                BasedOn="{StaticResource baseIconMenu}"
                TargetType="fa:ImageAwesome">
                <Setter Property="Opacity" Value="0" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type CheckBox}}}" Value="True">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard Timeline.DesiredFrameRate="{StaticResource FPS}">
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="(UIElement.Opacity)"
                                        From="0"
                                        To="1"
                                        Duration="{StaticResource AnimationDuration}" />
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard Timeline.DesiredFrameRate="{StaticResource FPS}">
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="(UIElement.Opacity)"
                                        From="1"
                                        To="0"
                                        Duration="{StaticResource AnimationDuration}" />
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.ExitActions>
                    </DataTrigger>


                </Style.Triggers>
            </Style>

            <Style
                x:Key="iconCloseMenu"
                BasedOn="{StaticResource baseIconMenu}"
                TargetType="fa:ImageAwesome">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type CheckBox}}}" Value="False">
                        <Setter Property="Visibility" Value="Visible" />
                        <DataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard Timeline.DesiredFrameRate="{StaticResource FPS}">
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="(UIElement.Opacity)"
                                        From="0"
                                        To="1"
                                        Duration="{StaticResource AnimationDuration}" />

                                    <DoubleAnimation
                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                        To="0"
                                        Duration="{StaticResource AnimationDuration}">
                                        <DoubleAnimation.EasingFunction>
                                            <BackEase EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>

                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard Timeline.DesiredFrameRate="{StaticResource FPS}">
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="(UIElement.Opacity)"
                                        From="1"
                                        To="0"
                                        Duration="{StaticResource AnimationDuration}" />
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                        To="90"
                                        Duration="{StaticResource AnimationDuration}">
                                        <DoubleAnimation.EasingFunction>
                                            <BackEase EasingMode="EaseIn" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <!--#endregion Button Open Menu-->

        </ResourceDictionary>

    </Window.Resources>

    <Canvas x:Name="cbMainContainer" AllowDrop="True">

        <Interaction:Interaction.Behaviors>
            <behavior:PreviewDropBehavior Command="{Binding PreviewDrop}" />
            <behavior:PreviewDragOverBehavior Command="{Binding PreviewDragOver}" />
        </Interaction:Interaction.Behaviors>


        <Image
            x:Name="dynamicItem"
            Width="60"
            Height="60"
            Panel.ZIndex="10"
            Opacity="0.6"
            Visibility="Collapsed" />

        <customcontrols:NotificationManager
            x:Name="notificationManager"
            Canvas.Top="70"
            Canvas.Right="35"
            Width="300"
            Height="500"
            Panel.ZIndex="10" />

        <StackPanel
            Canvas.Top="85"
            Canvas.Right="-15"
            Panel.ZIndex="11">
            <Button
                x:Name="tblOpenProcess"
                Canvas.Top="85"
                Canvas.Right="0"
                Height="30"
                HorizontalAlignment="Left"
                VerticalAlignment="Bottom"
                Panel.ZIndex="11"
                BorderThickness="0,5,0,0">

                <Interaction:Interaction.Triggers>
                    <Interaction:EventTrigger EventName="PreviewMouseLeftButtonDown">
                        <Interaction:InvokeCommandAction Command="{Binding OpenProcess}" CommandParameter="{Binding ElementName=tblOpenProcess}" />
                    </Interaction:EventTrigger>
                </Interaction:Interaction.Triggers>

                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualWidth}" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="FontSize" Value="{StaticResource TextSize}" />
                        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                        <Setter Property="Focusable" Value="False" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <TransformGroup>
                                    <RotateTransform Angle="90" />
                                </TransformGroup>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border
                                        Name="border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                        <ContentPresenter
                                            Margin="0,3,0,0"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            UseLayoutRounding="True" />
                                    </Border>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="BorderBrush" Value="{StaticResource IconColor}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>

                <TextBlock
                    Height="17"
                    VerticalAlignment="Top"
                    FontSize="{StaticResource TextSize}"
                    Foreground="{StaticResource ForegroundColor_60}"
                    Text="Tiến trình" />

            </Button>

        </StackPanel>

        <customcontrols:ProcessManager
            x:Name="processPanel"
            Canvas.Top="70"
            Canvas.Right="30"
            Width="350"
            Height="500"
            Panel.ZIndex="11"
            Visibility="{Binding VisibilityProcessPanel, IsAsync=True, Mode=OneWay}" />




        <Border
            x:Name="spContainerMenu"
            Canvas.Top="80"
            Width="220"
            Height="500"
            Margin="0"
            Padding="0,0,0,5"
            Panel.ZIndex="1"
            Background="{StaticResource BackgroundColor}"
            BorderBrush="{StaticResource ForegroundColor_20}"
            BorderThickness="2"
            CornerRadius="{StaticResource CornerRadius_V3}">
            <StackPanel Orientation="Vertical">

                <Grid
                    Height="45"
                    Margin="0,0,0,0"
                    HorizontalAlignment="Stretch">


                    <Grid>
                        <CheckBox
                            x:Name="ck_OpenMenu"
                            Width="45"
                            Height="45"
                            Margin="0,0,10,0"
                            Padding="0"
                            HorizontalAlignment="Right"
                            Background="Transparent"
                            Opacity="1">
                            <Interaction:Interaction.Triggers>
                                <Interaction:EventTrigger EventName="Click">
                                    <Interaction:InvokeCommandAction Command="{Binding ck_OpenMenu_Click}" CommandParameter="{Binding ElementName=ck_OpenMenu}" />
                                </Interaction:EventTrigger>

                            </Interaction:Interaction.Triggers>

                            <CheckBox.Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Focusable" Value="False" />
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="CheckBox">
                                                <Border>
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>

                                </Style>
                            </CheckBox.Style>



                            <Grid>
                                <fa:ImageAwesome
                                    Width="35"
                                    Height="20"
                                    Icon="Bars"
                                    Style="{StaticResource iconOpenMenu}" />
                                <fa:ImageAwesome
                                    Width="35"
                                    Height="20"
                                    Icon="AngleDoubleLeft"
                                    Style="{StaticResource iconCloseMenu}" />
                            </Grid>

                        </CheckBox>
                    </Grid>


                </Grid>

                <ScrollViewer
                    Height="455"
                    Margin="0"
                    Padding="10"
                    BorderThickness="0"
                    VerticalScrollBarVisibility="Auto">
                    <ScrollViewer.Resources>
                        <Style BasedOn="{StaticResource CustomScrollBar}" TargetType="ScrollBar">
                            <Setter Property="Foreground" Value="{StaticResource ForegroundColor_60}" />
                            <Setter Property="BorderBrush" Value="{StaticResource IconColor}" />
                            <Setter Property="FontSize" Value="4" />
                        </Style>
                    </ScrollViewer.Resources>
                    <StackPanel
                        x:Name="spContainerItemMenu"
                        Height="auto"
                        Margin="0"
                        HorizontalAlignment="Stretch"
                        Orientation="Vertical" />
                </ScrollViewer>

            </StackPanel>
        </Border>

        <Grid Width="{Binding ElementName=cbMainContainer, Path=ActualWidth, Mode=OneWay}" Height="{Binding ElementName=cbMainContainer, Path=ActualHeight, Mode=OneWay}">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="245" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="0" />
                <RowDefinition Height="9*" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>



            <!--#region Control bar-->

            <Grid Grid.ColumnSpan="2" Background="{StaticResource SubBackgroundColor}">

                <Grid.Resources>

                    <Style x:Key="icon" TargetType="Path">
                        <Setter Property="Fill" Value="{StaticResource ForegroundColor}" />
                        <Setter Property="Focusable" Value="False" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Value="true">
                                <Setter Property="Fill" Value="red" />
                            </DataTrigger>
                        </Style.Triggers>

                    </Style>

                </Grid.Resources>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Button
                    x:Name="btnBackPage"
                    Width="40"
                    HorizontalAlignment="Left"
                    Background="Transparent"
                    BorderThickness="0">

                    <Interaction:Interaction.Triggers>
                        <Interaction:EventTrigger EventName="Click">
                            <Interaction:InvokeCommandAction Command="{Binding BackPage}" CommandParameter="{Binding ElementName=btnBackPage}" />
                        </Interaction:EventTrigger>
                    </Interaction:Interaction.Triggers>

                    <Path
                        Width="18"
                        Height="12"
                        Margin="-10"
                        HorizontalAlignment="Left"
                        Data="M 18.71875 6.78125 L 17.28125 8.21875 L 24.0625 15 L 4 15 L 4 17 L 24.0625 17 L 17.28125 23.78125 L 18.71875 25.21875 L 27.21875 16.71875 L 27.90625 16 L 27.21875 15.28125 Z"
                        RenderTransformOrigin="0.5,0.5"
                        SnapsToDevicePixels="True"
                        Stretch="Fill"
                        Style="{StaticResource icon}">
                        <Path.RenderTransform>
                            <TransformGroup>
                                <RotateTransform Angle="180" />
                            </TransformGroup>
                        </Path.RenderTransform>



                    </Path>

                </Button>

                <Button
                    x:Name="btnNextPage"
                    Grid.Column="1"
                    Width="40"
                    HorizontalAlignment="Left"
                    Background="Transparent"
                    BorderThickness="0">

                    <Interaction:Interaction.Triggers>
                        <Interaction:EventTrigger EventName="Click">
                            <Interaction:InvokeCommandAction Command="{Binding NextPage}" CommandParameter="{Binding ElementName=btnNextPage}" />
                        </Interaction:EventTrigger>
                    </Interaction:Interaction.Triggers>

                    <Path
                        Width="18"
                        Height="12"
                        Margin="-10"
                        HorizontalAlignment="Left"
                        Data="M 18.71875 6.78125 L 17.28125 8.21875 L 24.0625 15 L 4 15 L 4 17 L 24.0625 17 L 17.28125 23.78125 L 18.71875 25.21875 L 27.21875 16.71875 L 27.90625 16 L 27.21875 15.28125 Z"
                        SnapsToDevicePixels="True"
                        Stretch="Fill"
                        Style="{StaticResource icon}" />


                </Button>

                <Button
                    Grid.Column="2"
                    Width="26"
                    Height="26"
                    Margin="0,0,10,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    FocusVisualStyle="{x:Null}"
                    Focusable="False"
                    Style="{StaticResource MaterialDesignFloatingActionMiniButton}">
                    <customcontrols:SkeletonCircleImage
                        Width="26"
                        Height="26"
                        ClipToBounds="True"
                        CornerRadius="{StaticResource CornerRadius_V3}"
                        DataContext="{Binding AvatarUser, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        FocusVisualStyle="{x:Null}"
                        Focusable="False"
                        ImageURL="{Binding RelativeSource={RelativeSource Mode=Self}, Path=DataContext}"
                        LoadingColor="{StaticResource ForegroundColor_40}"
                        StretchImage="UniformToFill" />

                </Button>

            </Grid>

            <!--#endregion-->

            <!--#region Header-->

            <Grid
                Grid.Row="1"
                Grid.ColumnSpan="2"
                Background="{StaticResource SubBackgroundColor}"
                Visibility="Hidden" />

            <!--#endregion-->

            <!--#region Content-->

            <Grid
                x:Name="gContainerContent"
                Grid.Row="2"
                Grid.ColumnSpan="2"
                Margin="10"
                AllowDrop="True"
                Background="{StaticResource BackgroundColor}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1.00*" />
                    <ColumnDefinition Width="18*" />
                    <ColumnDefinition Width="0.50*" MaxWidth="20" />
                </Grid.ColumnDefinitions>


                <Grid Grid.Column="1">

                    <local:LoadingScreenSpinnerRing x:Name="loadingScreen" Panel.ZIndex="10" />

                    <Frame
                        x:Name="fContainerView"
                        Margin="5"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch" />
                </Grid>



            </Grid>

            <!--#endregion-->

            <!--#region Footer-->

            <Grid
                Grid.Row="3"
                Grid.ColumnSpan="2"
                Background="LightGray" />

            <!--#endregion-->
        </Grid>


    </Canvas>

</Window>
