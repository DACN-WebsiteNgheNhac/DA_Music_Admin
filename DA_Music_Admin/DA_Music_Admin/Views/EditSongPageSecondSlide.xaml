<UserControl
    x:Class="DA_Music_Admin.Views.EditSongPageSecondSlide"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Interaction="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:behavior="clr-namespace:CustomControls.Behaviors;assembly=CustomControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:DA_Music_Admin.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:DA_Music_Admin.ViewModels"
    Name="View"
    HorizontalAlignment="Stretch"
    VerticalAlignment="Stretch"
    mc:Ignorable="d">
    <Interaction:Interaction.Triggers>
        <Interaction:EventTrigger EventName="Loaded">
            <Interaction:InvokeCommandAction Command="{Binding UserControl_Loaded}" CommandParameter="{Binding ElementName=View}" />
        </Interaction:EventTrigger>
    </Interaction:Interaction.Triggers>

    <UserControl.Resources>
        <Style x:Key="tblStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="{StaticResource TextSize}" />
            <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
            <Setter Property="FontFamily" Value="Montserrat" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="TextTrimming" Value="WordEllipsis" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />

        </Style>

        <Style
            x:Key="btnChooseFile"
            BasedOn="{StaticResource MaterialDesignFlatMidBgButton}"
            TargetType="Button">
            <Setter Property="FontSize" Value="{StaticResource TextSize}" />
            <Setter Property="Foreground" Value="{DynamicResource ForegroundInIconColor}" />
            <Setter Property="FontFamily" Value="Montserrat" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Background" Value="{DynamicResource IconColor}" />
            <Setter Property="Height" Value="35" />
            <Setter Property="Content" Value="Chọn" />
            <Setter Property="BorderBrush" Value="Transparent" />
        </Style>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="2*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <Border
            Grid.Row="0"
            Margin="0,0,0,10"
            Background="{DynamicResource SubBackgroundColor}"
            CornerRadius="{StaticResource CornerRadius_V3}">
            <TextBlock
                Margin="0,10,0,10"
                FontSize="20"
                FontWeight="DemiBold"
                Style="{StaticResource tblStyle}"
                Text="Chọn nghệ sỹ"
                TextAlignment="Center" />
        </Border>

        <ScrollViewer
            Grid.Row="1"
            Margin="0,0,0,10"
            AllowDrop="True"
            Background="{DynamicResource SubBackgroundColor}"
            BorderBrush="Transparent"
            FocusVisualStyle="{x:Null}"
            Focusable="False">

            <ScrollViewer.Resources>
                <Style BasedOn="{StaticResource CustomScrollBar}" TargetType="ScrollBar">
                    <Setter Property="Foreground" Value="{DynamicResource ForegroundColor_60}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource IconColor}" />
                    <Setter Property="FontSize" Value="4" />
                </Style>
            </ScrollViewer.Resources>

            <Interaction:Interaction.Behaviors>
                <behavior:PreviewDropBehavior Command="{Binding DropItem}" />
            </Interaction:Interaction.Behaviors>

            <WrapPanel
                x:Name="DropZone"
                Grid.Row="1"
                AllowDrop="True"
                FocusVisualStyle="{x:Null}"
                Focusable="False">



                <WrapPanel.ContextMenu>
                    <ContextMenu>
                        <MenuItem Name="btnRemoveAll" Header="Remove all">
                            <Interaction:Interaction.Triggers>
                                <Interaction:EventTrigger EventName="Click">
                                    <Interaction:InvokeCommandAction Command="{Binding removeAllSelectedItems}" CommandParameter="{Binding}" />
                                </Interaction:EventTrigger>
                            </Interaction:Interaction.Triggers>

                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="RemoveCircle" />
                            </MenuItem.Icon>
                        </MenuItem>

                    </ContextMenu>
                </WrapPanel.ContextMenu>

                <Interaction:Interaction.Triggers>
                    <Interaction:EventTrigger EventName="PreviewDragEnter">
                        <Interaction:InvokeCommandAction Command="{Binding DragEnter}" CommandParameter="{Binding ElementName=DropZone}" />
                    </Interaction:EventTrigger>
                    <Interaction:EventTrigger EventName="PreviewDragLeave">
                        <Interaction:InvokeCommandAction Command="{Binding DragLeave}" CommandParameter="{Binding ElementName=DropZone}" />
                    </Interaction:EventTrigger>
                </Interaction:Interaction.Triggers>




            </WrapPanel>
        </ScrollViewer>



        <Frame
            x:Name="fContainer"
            Grid.Row="2"
            HorizontalContentAlignment="Stretch"
            VerticalContentAlignment="Stretch"
            Content="{Binding ArtistPage, IsAsync=True}" />

        <StackPanel
            Grid.Row="3"
            Margin="0,10,0,0"
            HorizontalAlignment="Right"
            Orientation="Horizontal">

            <Button
                x:Name="btnExcuteAction"
                Margin="0,0,15,0"
                HorizontalAlignment="Right"
                Content="{Binding ContentButtonAction, Mode=OneWay}"
                Style="{StaticResource btnChooseFile}">
                <Interaction:Interaction.Triggers>
                    <Interaction:EventTrigger EventName="Click">
                        <Interaction:InvokeCommandAction Command="{Binding ExcuteAction}" CommandParameter="{Binding ElementName=btnExcuteAction}" />
                    </Interaction:EventTrigger>
                </Interaction:Interaction.Triggers>
            </Button>

            <Button
                x:Name="btnBackSlide"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Command="{x:Static materialDesign:Transitioner.MovePreviousCommand}"
                Content="Quay lại"
                Style="{StaticResource btnChooseFile}" />

            <Button
                x:Name="btnNextStep"
                Margin="10,0,0,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Command="{x:Static materialDesign:Transitioner.MovePreviousCommand}"
                Content="Tiếp tục"
                Style="{StaticResource btnChooseFile}" />
        </StackPanel>

    </Grid>
</UserControl>
