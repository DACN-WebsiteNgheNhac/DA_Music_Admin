<Page
    x:Class="DA_Music_Admin.Views.AlbumPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Interaction="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:at="clr-namespace:CustomControls.AttachedProperties;assembly=CustomControls"
    xmlns:cc="clr-namespace:CustomControls.Controls;assembly=CustomControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:fa="http://schemas.fontawesome.io/icons/"
    xmlns:local="clr-namespace:DA_Music_Admin.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    Name="View"
    Title="ArtistPage"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <Interaction:Interaction.Triggers>
        <Interaction:EventTrigger EventName="Loaded">
            <Interaction:InvokeCommandAction Command="{Binding Page_Loaded}" CommandParameter="{Binding ElementName=View}" />
        </Interaction:EventTrigger>
    </Interaction:Interaction.Triggers>

    <Page.Resources>

        <Style x:Key="TextBlockInDataGrid" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="TextAlignment" Value="Justify" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="{StaticResource TextSize}" />
            <Setter Property="FontFamily" Value="Alata" />
        </Style>

        <Style
            x:Key="ActionButton"
            BasedOn="{StaticResource MaterialDesignFlatMidBgButton}"
            TargetType="Button">
            <Setter Property="FontSize" Value="{StaticResource TextSize}" />
            <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
            <Setter Property="Background" Value="{DynamicResource IconColor}" />
            <Setter Property="FontWeight" Value="DemiBold" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Margin" Value="0,0,10,0" />
        </Style>

        <Style
            x:Key="PageButton"
            BasedOn="{StaticResource ActionButton}"
            TargetType="Button">
            <Setter Property="Width" Value="40" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Padding" Value="7" />
            <Setter Property="Margin" Value="0,0,5,0" />
        </Style>

        <Style x:Key="border" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="CornerRadius" Value="{StaticResource CornerRadius_V3}" />
            <Setter Property="UseLayoutRounding" Value="True" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />

        </Style>

        <Style
            x:Key="UpdateButtonInDatagrid"
            BasedOn="{StaticResource ActionButton}"
            TargetType="Button">
            <Setter Property="at:DataGridRowExtensions.ButtonClickCommand" Value="{Binding DataContext.OpenEditItemPage, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
        </Style>

        <Style
            x:Key="DeleteButtonInDatagrid"
            BasedOn="{StaticResource ActionButton}"
            TargetType="Button">
            <Setter Property="at:DataGridRowExtensions.ButtonClickCommand" Value="{Binding DataContext.DeleteItem, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
        </Style>

        <sys:Double x:Key="ImageWidth">50</sys:Double>
        <sys:Double x:Key="ImageHeight">50</sys:Double>

    </Page.Resources>

    <Border Background="{DynamicResource SubBackgroundColor}" Style="{StaticResource border}">

        <!--#region First slide-->
        <Canvas AllowDrop="True">
            <Grid
                Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Canvas}}, Path=ActualWidth, Mode=OneWay}"
                Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Canvas}}, Path=ActualHeight, Mode=OneWay}"
                AllowDrop="True">

                <Grid.RowDefinitions>
                    <RowDefinition Height="0" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>



                <Border
                    Grid.Row="1"
                    Height="50"
                    AllowDrop="True">
                    <Grid VerticalAlignment="Bottom">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6*" MaxWidth="350" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="25" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />

                        </Grid.ColumnDefinitions>

                        <Canvas AllowDrop="True">
                            <TextBox
                                Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Canvas}}, Path=ActualWidth, Mode=OneWay, IsAsync=True}"
                                Padding="0,0,40,5"
                                materialDesign:HintAssist.Hint="Nhập tên album, mô tả,..."
                                AllowDrop="True"
                                BorderBrush="{DynamicResource ForegroundColor}"
                                Style="{StaticResource CustomHintTextBox}"
                                Text="{Binding Query, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />



                            <Button
                                x:Name="btnClearQuery"
                                Canvas.Top="5"
                                Canvas.Right="0"
                                Margin="0"
                                Padding="10,5,10,5"
                                Background="Transparent"
                                Style="{StaticResource ActionButton}"
                                Visibility="{Binding ShowButtonClearQuery, Mode=OneWay, IsAsync=True}">
                                <Interaction:Interaction.Triggers>
                                    <Interaction:EventTrigger EventName="Click">
                                        <Interaction:InvokeCommandAction Command="{Binding BtnClearQuery_CLicked}" CommandParameter="{Binding ElementName=btnClearQuery}" />
                                    </Interaction:EventTrigger>
                                </Interaction:Interaction.Triggers>


                                <fa:ImageAwesome
                                    Width="12"
                                    Height="12"
                                    Foreground="{DynamicResource ForegroundColor}"
                                    Icon="Close" />

                            </Button>
                        </Canvas>

                        <Button
                            x:Name="btnSearch"
                            Grid.Column="1"
                            Width="40"
                            Padding="5"
                            Background="Transparent"
                            IsDefault="True"
                            Style="{StaticResource ActionButton}">

                            <Interaction:Interaction.Triggers>
                                <Interaction:EventTrigger EventName="Click">
                                    <Interaction:InvokeCommandAction Command="{Binding BtnSearch_CLicked}" CommandParameter="{Binding ElementName=btnSearch}" />
                                </Interaction:EventTrigger>
                            </Interaction:Interaction.Triggers>

                            <fa:ImageAwesome
                                Width="22"
                                Height="25"
                                Foreground="{DynamicResource ForegroundColor}"
                                Icon="Search" />
                        </Button>

                        <ComboBox
                            Grid.Column="2"
                            MaxWidth="150"
                            MaxHeight="45"
                            materialDesign:HintAssist.Hint="Chủ đề"
                            DisplayMemberPath="Name"
                            ItemsSource="{Binding DataTopic, IsAsync=True}"
                            SelectedItem="{Binding SelectedTopic, IsAsync=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            SelectedValuePath="Id"
                            Style="{StaticResource HintCombobox}" />

                        <ComboBox
                            Grid.Column="4"
                            MaxWidth="150"
                            MaxHeight="45"
                            materialDesign:HintAssist.Hint="Nghệ sỹ"
                            DisplayMemberPath="ArtistName"
                            ItemsSource="{Binding DataArtist, IsAsync=True}"
                            SelectedItem="{Binding SelectedArtist, IsAsync=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            SelectedValuePath="Id"
                            Style="{StaticResource HintCombobox}" />

                        <Button
                            x:Name="btnInsert"
                            Grid.Column="8"
                            Width="80"
                            AllowDrop="True"
                            Style="{StaticResource ActionButton}">

                            <Interaction:Interaction.Triggers>
                                <Interaction:EventTrigger EventName="Click">
                                    <Interaction:InvokeCommandAction Command="{Binding OpenEditItemPage}" CommandParameter="{Binding ElementName=btnInsert}" />
                                </Interaction:EventTrigger>

                            </Interaction:Interaction.Triggers>



                            <fa:ImageAwesome
                                Width="20"
                                Height="20"
                                Foreground="{DynamicResource ForegroundInIconColor}"
                                Icon="PlusCircle" />
                        </Button>
                    </Grid>

                </Border>

                <DataGrid
                    x:Name="dgvData"
                    Grid.Row="2"
                    Margin="0,15,0,0"
                    HorizontalAlignment="Center"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    x:FieldModifier="public"
                    AllowDrop="True"
                    AutoGenerateColumns="False"
                    Background="{DynamicResource SubBackgroundColor}"
                    ColumnWidth="*"
                    FocusVisualStyle="{x:Null}"
                    Focusable="False"
                    FontSize="{StaticResource TextSize}"
                    FontWeight="Normal"
                    Foreground="{DynamicResource ForegroundColor}"
                    HorizontalGridLinesBrush="{DynamicResource ForegroundColor_20}"
                    HorizontalScrollBarVisibility="Visible"
                    IsReadOnly="True"
                    ItemsSource="{Binding DataAlbum, IsAsync=True}"
                    RowHeight="70"
                    SelectionUnit="FullRow">

                    <Interaction:Interaction.Triggers>
                        <Interaction:EventTrigger EventName="PreviewDrop">
                            <Interaction:InvokeCommandAction Command="{Binding DropItem, IsAsync=True}" CommandParameter="{Binding ElementName=dgvData}" />
                        </Interaction:EventTrigger>
                    </Interaction:Interaction.Triggers>

                    <DataGrid.ItemContainerStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="at:DataGridRowExtensions.PreviewMouseLeftButtonDownCommand" Value="{Binding DataContext.DatagridRowClicked, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, IsAsync=True}" />

                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ForegroundColor_20}" />
                                </Trigger>
                            </Style.Triggers>

                        </Style>
                    </DataGrid.ItemContainerStyle>

                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGrid}}, IsAsync=True, Path=Foreground, Mode=OneWay}" />
                            <Setter Property="BorderThickness" Value="0" />
                        </Style>
                    </DataGrid.CellStyle>

                    <DataGrid.Resources>
                        <Style BasedOn="{StaticResource CustomScrollBar}" TargetType="ScrollBar">
                            <Setter Property="Foreground" Value="{DynamicResource ForegroundColor_60}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource IconColor}" />
                            <Setter Property="FontSize" Value="4" />
                        </Style>
                    </DataGrid.Resources>

                    <DataGrid.Columns>

                        <DataGridCheckBoxColumn
                            Width="Auto"
                            CanUserResize="False"
                            Header="Select All">

                            <DataGridCheckBoxColumn.HeaderTemplate>
                                <DataTemplate>
                                    <CheckBox
                                        Background="{DynamicResource IconColor}"
                                        FocusVisualStyle="{x:Null}"
                                        Focusable="False"
                                        Foreground="{DynamicResource ForegroundColor}"
                                        IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.IsSelectedAllItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, IsAsync=True}">
                                        <CheckBox.Resources>
                                            <SolidColorBrush x:Key="MaterialDesignCheckBoxOff" Color="{DynamicResource ColorForegroundColor}" />
                                        </CheckBox.Resources>
                                    </CheckBox>
                                </DataTemplate>
                            </DataGridCheckBoxColumn.HeaderTemplate>

                            <DataGridCheckBoxColumn.ElementStyle>
                                <Style BasedOn="{StaticResource MaterialDesignCheckBox}" TargetType="CheckBox">
                                    <Style.Resources>
                                        <SolidColorBrush x:Key="MaterialDesignCheckBoxOff" Color="{DynamicResource ColorForegroundColor_40}" />
                                    </Style.Resources>
                                    <Setter Property="Focusable" Value="False" />
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                    <Setter Property="Width" Value="40" />
                                    <Setter Property="Height" Value="30" />
                                    <Setter Property="MinWidth" Value="30" />

                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="IsChecked" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, IsAsync=True}" />
                                    <Setter Property="Background" Value="{DynamicResource IconColor}" />
                                    <Setter Property="Foreground" Value="{DynamicResource IconColor}" />
                                    <Setter Property="at:DataGridRowExtensions.ButtonClickCommand" Value="{Binding DataContext.CheckBoxDatagridRowClicked, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, IsAsync=True}" />
                                </Style>
                            </DataGridCheckBoxColumn.ElementStyle>
                        </DataGridCheckBoxColumn>

                        <DataGridTemplateColumn
                            Width="Auto"
                            CanUserResize="False"
                            Header="Id"
                            IsReadOnly="True">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Foreground="{DynamicResource ForegroundColor}" Text="Id" />
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        FocusVisualStyle="{x:Null}"
                                        Focusable="False"
                                        Text="{Binding Id, IsAsync=True}"
                                        TextAlignment="Center" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn
                            Width="80"
                            Header="Ảnh bìa"
                            IsReadOnly="True">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Foreground="{DynamicResource ForegroundColor}" Text="Ảnh bìa" />
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <cc:RoundedImage
                                        Width="{StaticResource ImageWidth}"
                                        Height="{StaticResource ImageHeight}"
                                        ClipToBounds="True"
                                        CornerRadius="{StaticResource CornerRadius_V3}"
                                        FocusVisualStyle="{x:Null}"
                                        Focusable="False"
                                        ImageURL="{Binding Image, Mode=OneWay}"
                                        LoadingColor="{DynamicResource ForegroundColor_40}"
                                        RenderTransformOrigin="0.5,0.5">

                                        <!--<cc:RoundedImage.Background>
                                            <ImageBrush ImageSource="{Binding Image, IsAsync=True}" Stretch="UniformToFill" />

                                        </cc:RoundedImage.Background>-->
                                    </cc:RoundedImage>

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn
                            Width="auto"
                            Header="Tiêu đề"
                            IsReadOnly="True">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Foreground="{DynamicResource ForegroundColor}" Text="Tiêu đề" />
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        FocusVisualStyle="{x:Null}"
                                        Focusable="False"
                                        Text="{Binding Name, IsAsync=True}"
                                        TextAlignment="Justify"
                                        TextTrimming="CharacterEllipsis"
                                        ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>


                        <DataGridTemplateColumn Header="Chủ đề" IsReadOnly="True">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Foreground="{DynamicResource ForegroundColor}" Text="Chủ đề" />
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock
                                        Margin="10,0,10,0"
                                        VerticalAlignment="Center"
                                        FocusVisualStyle="{x:Null}"
                                        Focusable="False"
                                        Text="{Binding Topic.Name, IsAsync=True}"
                                        TextAlignment="Justify"
                                        ToolTip="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>


                        <DataGridTemplateColumn Header="Ngày tạo" IsReadOnly="True">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Foreground="{DynamicResource ForegroundColor}" Text="Ngày tạo" />
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        FocusVisualStyle="{x:Null}"
                                        Focusable="False"
                                        Text="{Binding CreatedAt, IsAsync=True, StringFormat='{StaticResource FormatDate}'}"
                                        TextAlignment="Justify"
                                        TextTrimming="CharacterEllipsis" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Ngày cập nhật" IsReadOnly="True">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Foreground="{DynamicResource ForegroundColor}" Text="Ngày cập nhật" />
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        FocusVisualStyle="{x:Null}"
                                        Focusable="False"
                                        Text="{Binding UpdatedAt, IsAsync=True, StringFormat='{StaticResource FormatDate}'}"
                                        TextAlignment="Justify"
                                        TextTrimming="CharacterEllipsis" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>


                        <DataGridTemplateColumn Width="Auto">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Foreground="{DynamicResource ForegroundColor}" Text="Chức năng" />
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Button
                                            x:Name="btnUpdate"
                                            Width="40"
                                            Padding="5"
                                            Style="{StaticResource UpdateButtonInDatagrid}">

                                            <fa:ImageAwesome
                                                Width="20"
                                                Height="20"
                                                Foreground="{DynamicResource ForegroundInIconColor}"
                                                Icon="Edit" />
                                        </Button>
                                        <Button
                                            x:Name="btnDelete"
                                            Width="40"
                                            Padding="5"
                                            Background="OrangeRed"
                                            Style="{StaticResource DeleteButtonInDatagrid}"
                                            Visibility="Collapsed">

                                            <fa:ImageAwesome
                                                Width="20"
                                                Height="20"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Foreground="{DynamicResource ForegroundInIconColor}"
                                                Icon="Trash" />
                                        </Button>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                    </DataGrid.Columns>

                </DataGrid>


                <Grid Grid.Row="3">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock
                            VerticalAlignment="Center"
                            FontSize="{StaticResource SmallTextSize}"
                            Foreground="{DynamicResource ForegroundColor}"
                            Text="Số dòng dữ liệu"
                            TextAlignment="Center" />
                        <ComboBox
                            Width="120"
                            Margin="10,0,0,0"
                            materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource IconColor}"
                            FontSize="{StaticResource SmallTextSize}"
                            Foreground="{DynamicResource ForegroundColor}"
                            ItemsSource="{Binding ItemsEntries, IsAsync=True}"
                            SelectedItem="{Binding SelectedEntry, Mode=TwoWay, IsAsync=True}" />
                    </StackPanel>

                    <StackPanel
                        Grid.Column="1"
                        FlowDirection="RightToLeft"
                        Orientation="Horizontal">
                        <StackPanel FlowDirection="LeftToRight" Orientation="Horizontal">
                            <Button Name="btnGoToFirstPage" Style="{StaticResource PageButton}">
                                <Interaction:Interaction.Triggers>
                                    <Interaction:EventTrigger EventName="Click">
                                        <Interaction:InvokeCommandAction Command="{Binding GoToFirstPage}" CommandParameter="{Binding ElementName=btnGoToFirstPage}" />
                                    </Interaction:EventTrigger>
                                </Interaction:Interaction.Triggers>

                                <fa:ImageAwesome Foreground="{DynamicResource ForegroundColor}" Icon="AngleDoubleLeft" />

                            </Button>

                            <Button Name="btnGoToPreviousePage" Style="{StaticResource PageButton}">
                                <Interaction:Interaction.Triggers>
                                    <Interaction:EventTrigger EventName="Click">
                                        <Interaction:InvokeCommandAction Command="{Binding GoToPreviousePage}" CommandParameter="{Binding ElementName=btnGoToPreviousePage}" />
                                    </Interaction:EventTrigger>
                                </Interaction:Interaction.Triggers>

                                <fa:ImageAwesome Foreground="{DynamicResource ForegroundColor}" Icon="AngleLeft" />

                            </Button>

                            <Button Name="btnGoToNextPage" Style="{StaticResource PageButton}">
                                <Interaction:Interaction.Triggers>
                                    <Interaction:EventTrigger EventName="Click">
                                        <Interaction:InvokeCommandAction Command="{Binding GoToNextPage}" CommandParameter="{Binding ElementName=btnGoToNextPage}" />
                                    </Interaction:EventTrigger>
                                </Interaction:Interaction.Triggers>

                                <fa:ImageAwesome Foreground="{DynamicResource ForegroundColor}" Icon="AngleRight" />

                            </Button>

                            <Button Name="btnGoToLastPage" Style="{StaticResource PageButton}">
                                <Interaction:Interaction.Triggers>
                                    <Interaction:EventTrigger EventName="Click">
                                        <Interaction:InvokeCommandAction Command="{Binding GoToLastPage}" CommandParameter="{Binding ElementName=btnGoToLastPage}" />
                                    </Interaction:EventTrigger>
                                </Interaction:Interaction.Triggers>

                                <fa:ImageAwesome Foreground="{DynamicResource ForegroundColor}" Icon="AngleDoubleRight" />

                            </Button>

                        </StackPanel>


                        <StackPanel Margin="10,0,0,0" Orientation="Horizontal">
                            <Button x:Name="btnGoToDesPage" Style="{StaticResource PageButton}">
                                <Interaction:Interaction.Triggers>
                                    <Interaction:EventTrigger EventName="Click">
                                        <Interaction:InvokeCommandAction Command="{Binding GoToDesPage}" CommandParameter="{Binding ElementName=btnGoToDesPage}" />
                                    </Interaction:EventTrigger>
                                </Interaction:Interaction.Triggers>

                                <fa:ImageAwesome Foreground="{DynamicResource ForegroundColor}" Icon="ChevronCircleRight" />
                            </Button>
                            <TextBlock
                                VerticalAlignment="Center"
                                FlowDirection="LeftToRight"
                                FontSize="{StaticResource SmallTextSize}"
                                Foreground="{DynamicResource ForegroundColor}"
                                Text="{Binding TotalPage, StringFormat='/0'}"
                                TextAlignment="Center" />
                            <TextBox
                                Width="40"
                                materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource IconColor}"
                                CaretBrush="{DynamicResource ForegroundColor}"
                                FlowDirection="LeftToRight"
                                FontSize="{StaticResource SmallTextSize}"
                                Foreground="{DynamicResource ForegroundColor}"
                                SelectionBrush="{DynamicResource IconColor}"
                                Text="{Binding CurrentPage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                        </StackPanel>

                    </StackPanel>


                </Grid>


            </Grid>

        </Canvas>

        <!--#endregion First slide-->

    </Border>

</Page>