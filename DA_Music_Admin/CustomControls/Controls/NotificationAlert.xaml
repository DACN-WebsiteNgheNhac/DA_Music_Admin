<UserControl
    x:Class="CustomControls.Controls.NotificationAlert"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:CustomControls.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    Margin="0,0,0,10"
    Loaded="UserControl_Loaded"
    Unloaded="UserControl_Unloaded"
    mc:Ignorable="d">

    <UserControl.Resources>
        <sys:Double x:Key="Width">300</sys:Double>
        <Duration x:Key="Duration">0:0:0.250</Duration>
        <Storyboard x:Key="Hide">
            <DoubleAnimation
                Storyboard.TargetName="MainContainer"
                Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                To="{StaticResource Width}"
                Duration="{StaticResource Duration}">
                <DoubleAnimation.EasingFunction>
                    <BackEase EasingMode="EaseIn" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
    </UserControl.Resources>

    <Border
        x:Name="MainContainer"
        Width="{StaticResource Width}"
        Height="70"
        Background="{Binding BackgroundColor, Mode=OneWay}"
        BorderBrush="{Binding ForegroundColor}"
        BorderThickness="1"
        CornerRadius="7"
        RenderTransformOrigin="0.5,0.5">
        <Border.Effect>
            <DropShadowEffect
                BlurRadius="10"
                Direction="300"
                ShadowDepth="5"
                Color="{Binding ForegroundColor}" />
        </Border.Effect>

        <Border.RenderTransform>
            <TransformGroup>
                <ScaleTransform />
                <SkewTransform />
                <RotateTransform />
                <TranslateTransform X="240" />
            </TransformGroup>
        </Border.RenderTransform>

        <Border.Style>
            <Style TargetType="Border">
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                    To="-10"
                                    Duration="{StaticResource Duration}">
                                    <DoubleAnimation.EasingFunction>
                                        <BounceEase
                                            Bounces="5"
                                            Bounciness="12"
                                            EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>

                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>

        <Grid
            Width="{StaticResource Width}"
            Height="70"
            HorizontalAlignment="Center"
            RenderTransformOrigin="0.5,0.5">

            <!--#region Definitions-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="32" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="10" />
            </Grid.RowDefinitions>
            <!--#endregion Definitions-->

            <!--#region Elements-->
            <Path
                Grid.Row="0"
                Margin="5,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Data="{Binding Icon}"
                Fill="{Binding ColorIcon}" />

            <Grid Grid.Column="1" Margin="10,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock
                    Grid.Row="0"
                    VerticalAlignment="Bottom"
                    FontSize="14"
                    FontWeight="Heavy"
                    Foreground="{Binding ForegroundColor, Mode=OneWay}"
                    Text="{Binding Title, Mode=OneWay}"
                    TextTrimming="WordEllipsis" />

                <TextBlock
                    Grid.Row="1"
                    Margin="0,5,0,0"
                    VerticalAlignment="Top"
                    FontSize="13"
                    FontWeight="DemiBold"
                    Foreground="{Binding ForegroundColor, Mode=OneWay}"
                    Text="{Binding Message, Mode=OneWay}"
                    TextTrimming="WordEllipsis" />

            </Grid>

            <ProgressBar
                x:Name="progress"
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                Height="10"
                Margin="5,0,12,5"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="0"
                Foreground="{Binding ColorProgress}"
                Maximum="1"
                Minimum="0"
                Value="{Binding CurrentValueProgress, Mode=OneTime}">
                <ProgressBar.Style>
                    <Style TargetType="ProgressBar">
                        <Style.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(ProgressBar.Value)"
                                            To="0"
                                            Duration="0:0:3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>





                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Unloaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(ProgressBar.Value)"
                                            To="1"
                                            Duration="0:0:0">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>





                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Style.Triggers>

                    </Style>
                </ProgressBar.Style>
            </ProgressBar>

            <Button
                Grid.RowSpan="2"
                Grid.Column="2"
                Width="32"
                Height="32"
                HorizontalAlignment="Right"
                Background="Transparent"
                Click="BtnClose_Clicked"
                FocusVisualStyle="{x:Null}"
                Focusable="False">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            SnapsToDevicePixels="True" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
                <Path
                    Data="M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2C6.47,2 2,6.47 2,12C2,17.53 6.47,22 12,22C17.53,22 22,17.53 22,12C22,6.47 17.53,2 12,2M14.59,8L12,10.59L9.41,8L8,9.41L10.59,12L8,14.59L9.41,16L12,13.41L14.59,16L16,14.59L13.41,12L16,9.41L14.59,8Z"
                    FocusVisualStyle="{x:Null}"
                    Focusable="False">
                    <Path.Style>
                        <Style TargetType="Path">
                            <Setter Property="Fill" Value="{Binding ColorIcon}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Value="true">
                                    <Setter Property="Fill" Value="{Binding HoveredColorIcon}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Path.Style>
                </Path>
            </Button>
            <!--#endregion Elements-->

        </Grid>

    </Border>

    <UserControl.CacheMode>
        <BitmapCache />
    </UserControl.CacheMode>

</UserControl>
